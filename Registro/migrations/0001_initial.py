# Generated by Django 5.1.5 on 2025-02-05 23:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_programada', models.DateTimeField()),
                ('esta_completo', models.BooleanField(default=False)),
                ('descripcion_resultado', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'matches',
                'ordering': ['hora_programada'],
            },
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('peso', models.FloatField()),
                ('categoria', models.CharField(max_length=50)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='Ronda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ronda', models.IntegerField()),
                ('hora_inicio', models.DateTimeField()),
                ('hora_fin', models.DateTimeField()),
                ('esta_completa', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['numero_ronda'],
            },
        ),
        migrations.CreateModel(
            name='Torneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField()),
                ('ubicacion', models.CharField(max_length=255)),
                ('descripcion', models.TextField()),
                ('esta_activo', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('programada_para', models.DateTimeField()),
                ('esta_enviada', models.BooleanField(default=False)),
                ('fecha_envio', models.DateTimeField(blank=True, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='Registro.match')),
            ],
            options={
                'ordering': ['programada_para'],
            },
        ),
        migrations.AddField(
            model_name='match',
            name='ganador',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_ganados', to='Registro.robot'),
        ),
        migrations.AddField(
            model_name='match',
            name='robot1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_como_robot1', to='Registro.robot'),
        ),
        migrations.AddField(
            model_name='match',
            name='robot2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_como_robot2', to='Registro.robot'),
        ),
        migrations.AddField(
            model_name='match',
            name='ronda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='Registro.ronda'),
        ),
        migrations.AddField(
            model_name='ronda',
            name='torneo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rondas', to='Registro.torneo'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name_robot', models.CharField(max_length=50)),
                ('correo_electronico', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='torneo',
            name='administrador',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='torneos_administrados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='robot',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='robots', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='ronda',
            unique_together={('torneo', 'numero_ronda')},
        ),
    ]
